# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
      - test

pool:
  vmImage: 'ubuntu-latest'

jobs:

- job: Test code using test cases in repository
steps:
  - task: Maven@3
    inputs:
      mavenPomFile: 'plinko/pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
  - task: Maven@4
    inputs:
      mavenPomFile: 'plinko/pom.xml'
      goals: 'test'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false

- job: push code to main if pipeline is successful
  steps:
  - checkout: self

    - script: |
        git config --global user.email "kenneth5982@gmail.com"
        git config --global user.name "asianhue"
        git checkout main
        git add .
        git commit -m "Commit message"
        git remote add origin https://github.com/asianhue/DogThingyMaven.git
        git push -u origin main
    displayName: 'Push changes to main'
    condition: succeeded()  # Run only if pipeline is successful      
